name: "Create release"

#env:
#  IMAGE_REPO: europe-docker.pkg.dev/kyma-project/prod/lifecycle-manager
#  CODE_REPOSITORY: kyma-project/lifecycle-manager
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        default: ""
        required: true
      since:
        description: "Changelog since"
        default: ""
        required: false

jobs:
  validate-release:
    name: Validate release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate the release tag
        run: ./.github/scripts/validate_release_tag.sh ${{ github.event.inputs.version }}
      - name: Check if release exists
        run: ./.github/scripts/get_release_by_tag.sh ${{ github.event.inputs.version }} ${{ secrets.GITHUB_TOKEN }}
  draft-release:
    name: Draft release
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/scripts/create_changelog.sh ${{ github.event.inputs.version }} ${{ env.IMAGE_REPO }}:${{ github.event.inputs.version }} ${{ github.event.inputs.since }}
      - name: Draft release
        id: draft-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(./.github/scripts/draft_release.sh ${{ github.event.inputs.version }})
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
      - name: Create tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }} --tags
    outputs:
      release_id: ${{ steps.draft-release.outputs.release_id }}
  build:
    needs: draft-release
    uses: ./.github/workflows/build.yml
    with:
      tag: "${{ github.event.inputs.version }}"
  publish-release:
    name: Publish release
    needs: [ validate-release, draft-release, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
#      - name: Wait for the Docker image
#        timeout-minutes: 20
#        env:
#          ITERATIONS: 40
#          SLEEP_SECONDS: 30
#        run: ./.github/scripts/wait_for_image.sh ${{ env.IMAGE_REPO }}:${{ github.event.inputs.version }} $ITERATIONS $SLEEP_SECONDS
      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/scripts/publish_release.sh ${{ needs.draft-release.outputs.release_id }}