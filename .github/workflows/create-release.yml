name: "Create release"

on:
  pull_request: # TODO debug
    types: [opened, synchronize] # TODO debug
    branches: # TODO debug
      - main # TODO debug
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        default: ""
        required: false # TODO debug
      since:
        description: "Changelog since"
        default: ""
        required: false

jobs:
  validate-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
 #     - name: Validate the release tag
    #    run: ./.github/scripts/validate_version.sh ${{ github.event.inputs.version }}
      - name: validate release tag # TODO debug
        run: ./.github/scripts/validate_version.sh "0.0.1" # TODO debug
#      - name: Check if release exists
     #   run: ./.github/scripts/check_released_version.sh ${{ github.event.inputs.version }} ${{ secrets.GITHUB_TOKEN }}
      - name: Check if release exists # TODO debug
        run: ./.github/scripts/check_released_version.sh "0.0.1" ${{ secrets.GITHUB_TOKEN }} # TODO debug
  draft-release:
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/scripts/create_changelog.sh ${{ github.event.inputs.version }} ${{ env.IMAGE_REPO }}:${{ github.event.inputs.version }} ${{ github.event.inputs.since }}
      - name: Draft release
        id: draft-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(./.github/scripts/draft_release.sh ${{ github.event.inputs.version }})
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
      - name: Create tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }} --tags
    outputs:
      release_id: ${{ steps.draft-release.outputs.release_id }}
  artifacts:
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Go setup
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'
      - name: "Run 'make build' with version"
        run: make build VERSION=${{ inputs.version }}
      - name: Add binaries to draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_BASE_REF: ${{ github.event.inputs.version }}
        run: ./.github/scripts/upload_artifacts.sh
  publish-release:
    runs-on: ubuntu-latest
    needs: [ validate-release, draft-release, artifacts ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./.github/scripts/publish_release.sh ${{ needs.draft-release.outputs.release_id }}
