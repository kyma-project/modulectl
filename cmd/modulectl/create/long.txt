Use this command to create a Kyma module, bundle it as an OCI artifact, and push it to the OCI registry optionally.

### Detailed description

This command allows you to create a Kyma module as an OCI artifact and optionally push it to the OCI registry of your choice.
For more information about Kyma modules see the [documentation](https://kyma-project.io/#/06-modules/README).

### Configuration

Provide the `--config-file` flag with a config file path.
The module config file is a YAML file used to configure the following attributes for the module:

```yaml
- name:             a string, required, the name of the module
- version:          a string, required, the version of the module
- channel:          a string, required, channel that should be used in the ModuleTemplate CR
- manifest:         a string, required, reference to the manifest, must be a relative file name or URL

- defaultCR:        a string, optional, reference to a YAML file containing the default CR for the module, must be a relative file name or URL
- mandatory:        a boolean, optional, default=false, indicates whether the module is mandatory to be installed on all clusters
- resourceName:     a string, optional, default={NAME}-{CHANNEL}, the name for the ModuleTemplate CR that will be created
- internal:         a boolean, optional, default=false, determines whether the ModuleTemplate CR should have the internal flag or not
- beta:             a boolean, optional, default=false, determines whether the ModuleTemplate CR should have the beta flag or not
- security:         a string, optional, name of the security scanners config file
- labels:           a map with string keys and values, optional, additional labels for the generated ModuleTemplate CR
- annotations:      a map with string keys and values, optional, additional annotations for the generated ModuleTemplate CR
```

The **manifest** file contains all the module's resources in a single, multi-document YAML file. These resources will be created in the Kyma cluster when the module is activated.
The **defaultCR** file contains a default custom resource for the module that is installed along with the module. It is additionally schema-validated against the Custom Resource Definition.
The CRD used for the validation must exist in the set of the module's resources.

### Modules as OCI artifacts
Modules are built and distributed as OCI artifacts. 
This command creates a component descriptor in the configured descriptor path (./mod as a default) and packages all the contents on the provided path as an OCI artifact.
The internal structure of the artifact conforms to the [Open Component Model](https://ocm.software/) scheme version 3.

If you configured the "--registry" flag, the created module is validated and pushed to the configured registry.
